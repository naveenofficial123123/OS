#include <stdio.h>

struct Process {
    int processID;
    int burstTime;
    int remainingTime;
};

void executeRoundRobin(struct Process processes[], int n, int timeQuantum) {
    printf("\nGantt Chart:\n");
    int currentTime = 0;

    while (1) {
        int allProcessesCompleted = 1;

        for (int i = 0; i < n; i++) {
            if (processes[i].remainingTime > 0) {
                allProcessesCompleted = 0;

                int executionTime = (processes[i].remainingTime < timeQuantum) ? processes[i].remainingTime : timeQuantum;

                printf("| P%d ", processes[i].processID);
                processes[i].remainingTime -= executionTime;
                currentTime += executionTime;

                if (processes[i].remainingTime == 0) {
                    printf("|");
                } else {
                    printf("| %d ", currentTime);
                }
            }
        }

        if (allProcessesCompleted) {
            break;
        }
    }

    printf("\n");
}

int main() {
    int n, timeQuantum;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct Process processes[n];

    for (int i = 0; i < n; i++) {
        processes[i].processID = i + 1;
        printf("Enter burst time for Process %d: ", i + 1);
        scanf("%d", &processes[i].burstTime);
        processes[i].remainingTime = processes[i].burstTime;
    }

    printf("Enter time quantum for Round Robin: ");
    scanf("%d", &timeQuantum);

    executeRoundRobin(processes, n, timeQuantum);

    return 0;
}
