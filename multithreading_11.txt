#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

// Function to be executed by the first thread
void *threadFunction1(void *arg) {
    printf("Thread 1: Hello from the first thread!\n");
    pthread_exit(NULL);
}

// Function to be executed by the second thread
void *threadFunction2(void *arg) {
    printf("Thread 2: Hello from the second thread!\n");
    pthread_exit(NULL);
}

int main() {
    pthread_t thread1, thread2;

    // Create the first thread
    if (pthread_create(&thread1, NULL, threadFunction1, NULL) != 0) {
        perror("Error creating thread 1");
        exit(EXIT_FAILURE);
    }

    // Create the second thread
    if (pthread_create(&thread2, NULL, threadFunction2, NULL) != 0) {
        perror("Error creating thread 2");
        exit(EXIT_FAILURE);
    }

    // Wait for both threads to finish
    if (pthread_join(thread1, NULL) != 0) {
        perror("Error joining thread 1");
        exit(EXIT_FAILURE);
    }

    if (pthread_join(thread2, NULL) != 0) {
        perror("Error joining thread 2");
        exit(EXIT_FAILURE);
    }

    printf("Main thread: All threads have finished.\n");

    return 0;
}
